{"version":3,"sources":["pages/Memorial/assets/bt_close.svg","pages/FeaturedStories/assets/Ic_chevron_right_48px.svg","context/AppContext.js","utils/getAppData.js","reducers/AppReducer.js","reducers/types.js","pages/Page.js","pages/HomePage/HomePage.js","pages/Components/Header/Header.js","pages/Names/Names.js","pages/Memorial/Memorial.js","pages/FeaturedStories/FeaturedStories.js","utils/utilities.js","pages/Story/Story.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AppContext","createContext","getAppData","url","a","path","window","location","href","indexOf","process","fetch","response","json","res","processStories","stories","returnArray","forEach","story","push","id","acf","processFeaturedNames","data","names","memorial_name","name","i","featured_story","processNames","matches","firstname","match","initials","join","processMedals","medal","images","medal_image","appReducer","state","action","type","featuredNames","medals","featured","Page","props","useEffect","gsap","killTweensOf","to","duration","alpha","className","class","children","HomePage","useHistory","useContext","dispatch","Header","Names","history","onClick","Memorial","memo","useState","active","setActive","fr","useRef","fr2","aresults","overlay","overlayInner","filteredNames","setFilteredNames","selected","setSelected","current","showNames","setTimeout","Letter","e","newNames","filter","entry","surname","substring","console","log","Letters","map","key","showPopup","personData","openOverlay","Results","style","width","height","inverted","ref","length","ID","ImageOverlay","closeOverlay","src","close","rank","date_of_death","buried_memorialised","next_of_kin","photo","sizes","medium","set","scale","delay","ease","Expo","easeOut","display","FeaturedStories","Featured","medium_large","chevron","getIndexByKeyValue","array","value","Story","useParams","setStory","person","setPerson","displaymedals","setDisplaymedals","idx","parseInt","storyID","tempMedals","personal_info","content","autoAlpha","spaceBetween","slidesPerView","navigation","pagination","clickable","other_objects","object","index","alt","App","useReducer","providerValue","useMemo","featured_stories","get","then","Provider","component","exact","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9e60f278.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bt_close.9cd3551b.svg\";","module.exports = __webpack_public_path__ + \"static/media/Ic_chevron_right_48px.ddf06c40.svg\";","import {createContext} from 'react';\nexport const AppContext = createContext(null);\n","export const getAppData = async (url) => {\n    let path;\n    if(window.location.href.indexOf('localhost') !== -1){\n        path = process.env.REACT_APP_API_PROD;\n    } else {\n        path = process.env.REACT_APP_API_PROD;\n    }\n    let response = await fetch(`${path}/?rest_route=/wp/v2/${url}`);\n    // let response = await fetch(`${path}/?rest_route=/wp/v2/av02_1&_embed`);\n    const res = await response.json();\n    return res;\n};\n","import {\n    DATA_FEATURED,\n    DATA_STORIES, DATA_NAMES, DATA_MEDALS,\n} from \"./types\";\nconst processStories = (stories)=> {\n    let returnArray = [];\n    stories.forEach(story => {\n        //console.log('', story);\n        returnArray.push({id: story.id, ...story.acf});\n    })\n    return returnArray;\n}\nconst processFeaturedNames = (data)=> {\n    let names = data.acf.memorial_name;\n    let returnArray = [];\n    names.forEach((name, i) => {\n        if (name.featured_story) {\n            //console.log('featured', name.featured_story.ID, 'is name: ', i);\n            returnArray.push(name)\n        }\n    })\n    // console.log('', returnArray);\n    return returnArray;\n}\nconst processNames = (data)=> {\n    let returnArray = []\n    // makes new property initials\n    data.acf.memorial_name.forEach(name => {\n        let matches = name.firstname.match(/\\b(\\w)/g);\n        name.initials = matches.join(' ');\n        returnArray.push(name)\n    })\n    return returnArray;\n}\nconst processMedals = (data)=> {\n    let returnArray = []\n    // makes new property initials\n    data.forEach(medal => {\n        returnArray.push({id: medal.id, images: medal.acf.medal_image})\n    })\n    return returnArray;\n}\nfunction appReducer(state, action) {\n    switch (action.type) {\n        case DATA_NAMES:\n            // console.log('setting names', action.data);\n            return {\n                ...state,\n                names: processNames(action.data),\n                featuredNames: processFeaturedNames(action.data),\n            };\n        case DATA_MEDALS:\n            // console.log('setting names', action.data);\n            return {\n                ...state,\n                medals: processMedals(action.data)\n            };\n        case DATA_FEATURED:\n            //console.log('setting featured', action.data);\n            return {\n                ...state,\n                featured: processStories(action.data)\n            };\n        default:\n            return state;\n    }\n}\n\nexport default appReducer;\n","export const SET_DATA = \"SET_DATA\";\nexport const DATA_STORIES = \"DATA_MEDALS\";\nexport const DATA_NAMES = \"DATA_NAMES\";\nexport const DATA_MEDALS = \"DATA_MEDALS\";\nexport const DATA_FEATURED = \"DATA_FEATURED\";\nexport const DATA_LOADED = \"DATA_LOADED\";\n","import React, {useEffect} from \"react\";\nimport {gsap} from \"gsap\";\n\nconst Page = (props)=> {\n    useEffect(()=> {\n        gsap.killTweensOf('.page');\n        gsap.to('.page', {duration: 0.5, alpha: 1});\n    }, [])\n    return (\n        <div className={`${props.class} page`}>\n            { props.children }\n        </div>\n    )\n}\nexport default Page;\n","import React, {useContext} from \"react\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport Page from \"../Page\";\nimport './styles/styles.scss';\nimport {AppContext} from \"../../context/AppContext\";\nconst HomePage = () => {\n    const history = useHistory();\n    const {state, dispatch} = useContext(AppContext);\n\n\n    return (\n        <Page>\n            <h1>Home</h1>\n            <Link to=\"/memorialboard\">Memorial Board</Link>\n        </Page>\n    )\n}\nexport default HomePage;\n","import React from \"react\";\nimport \"./styles.scss\"\nimport {Link} from \"react-router-dom\";\nconst Header = ()=> {\n\n    return (\n        <div className=\"header\">\n            <div className=\"header__bg\"></div>\n            <div className=\"header__home\"></div>\n            <Link to=\"/names\">Names</Link>\n            <Link to=\"/stories\">Stories</Link>\n        </div>\n    )\n}\nexport default Header\n","import React, {useContext, useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport Page from \"../Page\";\nimport './styles/styles.scss';\nconst Names = () => {\n    const history = useHistory();\n\n    const memorial = ()=> {\n        history.push('/memorial');\n    }\n    const featured = ()=> {\n        history.push('/featuredstories');\n    }\n\n    return (\n        <Page class=\"names\">\n            <div className=\"names__panel\">\n                <div className=\"names__button\" onClick={memorial}>MEMORIAL BOARD</div>\n            </div>\n            <div className=\"names__panel\">\n                <div className=\"names__button\" onClick={featured}>FEATURED STORIES</div>\n            </div>\n        </Page>\n    )\n}\nexport default Names;\n","import React, {memo, useContext, useEffect, useRef, useState} from \"react\";\nimport {Link, Route, useHistory} from \"react-router-dom\";\nimport Page from \"../Page\";\nimport './styles/styles.scss';\nimport {AppContext} from \"../../context/AppContext\";\nimport RSC from \"react-scrollbars-custom\";\nimport {Expo, Quad, gsap} from \"gsap\";\nimport SVG from 'react-inlinesvg';\nimport close from \"./assets/bt_close.svg\";\nconst Memorial = memo(props => {\n    const history = useHistory();\n    const {state, dispatch} = useContext(AppContext);\n    const [active, setActive] = useState(null)\n    const fr = useRef(true);\n    const fr2 = useRef(true);\n    const aresults = useRef();\n    const overlay = useRef();\n    const overlayInner = useRef();\n    const [filteredNames, setFilteredNames] = useState([])\n    const [selected, setSelected] = useState();\n\n    useEffect(()=> {\n        if (fr.current) { fr.current = false; return;}\n        setFilteredNames(state.names);\n    }, [state.names])\n    useEffect(()=> {\n        if (fr.current) { fr.current = false; return;}\n        setFilteredNames(state.names);\n        showNames();\n    }, [])\n    useEffect(()=> {\n        if (fr2.current) { fr2.current = false; return;}\n        showNames();\n    }, [state.featured])\n    const showNames = ()=> {\n        setTimeout(()=> {\n            gsap.to('.results', {duration: 0.3, alpha: 1});\n        }, 60)\n    }\n    const filter = (e,i)=> {\n        // changes css on button\n        if (active === i) {\n            setActive(null);\n            setFilteredNames(state.names);\n            showNames()\n            return;\n        } else {\n            setActive(i);\n        }\n        // filter names\n        const startsWithLetter = (entry) => entry.surname.substring(0,1) === e;\n        let newNames = state.names.filter(startsWithLetter);\n\n        console.log('newnames', newNames);\n\n\n        setFilteredNames(newNames);\n        setTimeout(()=> {\n            gsap.to('.results', {duration: 0.3, alpha: 1});\n        }, 60)\n    }\n    const Letter = memo(props => {\n        return (\n            <div\n                className= { `memorial-letters__letter ${active === props.i ? \"memorial-letters__letter--active\" : \"\"}` }\n                onClick={()=> filter(props.e, props.i)}\n            >{props.e}</div>\n        )\n    });\n    const Letters = memo(props => {\n        let arr = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'];\n        return (\n            arr.map((e, i) => (\n                <Letter e={e} i={i} key={i}/>\n            ))\n        )\n    });\n    const showDetail = (personData)=> {\n        console.log('', personData);\n        if (personData.featured_story) {\n            console.log('showing featured');\n            history.push(`story/${personData.featured_story.ID}`)\n        } else {\n            showPopup(personData)\n        }\n    }\n    const showPopup = (personData)=> {\n        setSelected(personData)\n    }\n    useEffect(()=> {\n        if (selected) {\n            openOverlay();\n        }\n    }, [selected]);\n\n    const Results = ()=> {\n        return (\n            <RSC id=\"RSC-Example\" style={{width: \"770px\", height: \"800px\", inverted: false}}>\n                <div className=\"results\" ref={aresults}>\n                    {filteredNames && filteredNames.length ? (\n                        filteredNames.map((e, i) => (\n                            <div key={i}\n                                 className={ `results__result ${ e.featured_story ? \"results__result--featured\" : \"\"}` }\n                                onClick={()=> {showDetail(e)}}\n                            >\n                                <span>{e.surname}</span>, {e.initials}\n                            </div>\n                        ))\n                    ) : (\n                        <div>No results</div>\n                    )}\n                </div>\n            </RSC>\n        )\n    }\n\n    const ImageOverlay =  memo(props => {\n        return (\n            <div className=\"imageoverlay\" ref={overlay}>\n                <div className=\"imageoverlay__container\" ref={overlayInner}>\n                    <div className=\"imageoverlay__close\"  onClick={closeOverlay}>\n                        <SVG src={close} onClick={closeOverlay}/>\n                    </div>\n                    <div className=\"imageoverlay__image\">\n                        <div className=\"popup__left\">\n                        <h1>{selected && selected.firstname} {selected && selected.surname}</h1>\n\n                        {selected && selected.rank ? (\n                            <p><span className=\"bold\">Rank: </span>{selected.rank}</p>\n                        ) : (<></>)}\n                        {selected && selected.date_of_death ? (\n                            <p><span className=\"bold\">Date of death: </span>{selected.date_of_death}</p>\n                        ) : (<></>)}\n                        {selected && selected.buried_memorialised ? (\n                            <p><span className=\"bold\">Buried/memorialised: </span>{selected.buried_memorialised}</p>\n                        ) : (<></>)}\n                        {selected && selected.next_of_kin ? (\n                            <p><span className=\"bold\">Next of kin: </span>{selected.next_of_kin}</p>\n                        ) : (<></>)}\n                        </div>\n                        <div className=\"popup__right\">\n                            {selected && selected.photo ? (\n                                <img src={selected.photo.sizes.medium} />\n                            ) : (<></>)}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    });\n\n    const openOverlay = () => {\n        gsap.set(overlay.current, {alpha: 0});\n        gsap.to(overlay.current, {duration: 0.2, alpha: 1});\n        gsap.set(overlayInner.current, {alpha: 0, scale: 0.95});\n        gsap.to(overlayInner.current, {duration: 0.4, scale: 1, alpha: 1, delay: 0.1, ease: Expo.easeOut});\n        overlay.current.style.display = 'flex';\n    }\n    const closeOverlay = () => {\n        setSelected(null)\n        overlay.current.style.display = 'none';\n        showNames();\n    }\n\n    return (\n        <Page class=\"memorial\">\n            <ImageOverlay/>\n            <div className=\"memorial__left\">\n                <div className=\"memorial-letters\">\n                    <h1>Memorial board</h1>\n                    <h2>Full list of names</h2>\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                        Duis ac nisl lacus. Sed a consequat velit, et scelerisque lacus.\n                        Maecenas vitae porttitor leo.</p>\n                    <div className=\"memorial-letters__letters\">\n                        <Letters/>\n                    </div>\n                </div>\n            </div>\n            <div className=\"memorial__right\">\n                <Results/>\n            </div>\n        </Page>\n    )\n})\nexport default Memorial;\n","import React, {memo, useContext, useEffect, useRef, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport Page from \"../Page\";\nimport './styles/styles.scss';\nimport {AppContext} from \"../../context/AppContext\";\nimport RSC from \"react-scrollbars-custom\";\nimport SVG from \"react-inlinesvg\";\nimport chevron from \"./assets/Ic_chevron_right_48px.svg\";\n\nconst FeaturedStories = memo(props => {\n    const history = useHistory();\n    const {state, dispatch} = useContext(AppContext);\n\n    const openFeatured = (id)=> {\n        history.push(`story/${id}`)\n    }\n\n    const Featured = ()=> {\n        return (\n            <RSC id=\"RSC-Example\" style={{width: \"1138px\", height: \"800px\", inverted: false}}>\n                <div className=\"featured_results\">\n                    {state.featuredNames && state.featuredNames.length ? (\n                            state.featuredNames.map((e, i) => (\n                                <div key={i} className=\"featured_result\" onClick={() => {openFeatured(e.featured_story.ID)}}>\n                                    <div className=\"featured_result__image\">\n                                        {e.photo ? (\n                                            <img src={e.photo.sizes.medium_large}/>\n                                        ) : (<></>)}\n                                    </div>\n                                    <div className=\"featured_result__copy\">\n                                        <div className=\"featured_result__name\">{e.firstname} {e.surname}</div>\n                                        {e.rank ? (\n                                            <p><span className=\"bold\">Rank: </span>{e.rank}</p>\n                                        ) : (<></>)}\n                                        {e.date_of_death ? (\n                                            <p><span className=\"bold\">Date of death: </span>{e.date_of_death}</p>\n                                        ) : (<></>)}\n                                        {e.buried_memorialised ? (\n                                            <p><span className=\"bold\">Buried/memorialised: </span>{e.buried_memorialised}</p>\n                                        ) : (<></>)}\n                                        {e.next_of_kin ? (\n                                            <p><span className=\"bold\">Next of kin: </span>{e.next_of_kin}</p>\n                                        ) : (<></>)}\n\n                                        <div className=\"featured_result__button\">Find out more <SVG src={chevron}/></div>\n                                    </div>\n\n                                </div>\n                            ))) :\n                        <></>\n                    }\n                </div>\n            </RSC>\n        )\n    }\n\n    return (\n        <Page class=\"featured\">\n            <div className=\"featured__left\">#\n                <div className=\"featured__copy\">\n                <h1>Featured<br/>stories</h1>\n                <p>Lorem ipsum dolor sit amet,\n                    consectetur adipiscing elit. Duis ac nisl lacus. Sed a consequat velit, et scelerisque lacus. Maecenas vitae porttitor leo.</p>\n                </div>\n            </div>\n            <div className=\"featured__right\">\n                <Featured/>\n            </div>\n        </Page>\n    )\n})\nexport default FeaturedStories;\n","export const isEmpty = (obj) => {\n    return Object.keys(obj).length === 0;\n};\nexport function clamp(a,b,c) {\n    return Math.max(b,Math.min(c,a));\n}\nexport function isIE() {\n    function ieVersion(uaString) {\n        uaString = uaString || navigator.userAgent;\n        let match = /\\b(MSIE |Trident.*?rv:|Edge\\/)(\\d+)/.exec(uaString);\n        if (match) return parseInt(match[2])\n    }\n    return ieVersion() !== undefined;\n}\nexport function getIndexByKeyValue(array, key, value) {\n    return array.map(e => e[key]).indexOf(value);\n}\nexport function searchArray(value, key, arr){\n\n    for (let i=0; i < arr.length; i++) {\n        if (arr[i]['acf']['screen_id'] === value) {\n            return arr[i];\n        }\n    }\n}\nexport function getTranslateValues (element) {\n    const style = window.getComputedStyle(element)\n    const matrix = style.transform || style.webkitTransform || style.mozTransform\n\n    // No transform property. Simply return 0 values.\n    if (matrix === 'none') {\n        return {\n            x: 0,\n            y: 0,\n            z: 0\n        }\n    }\n\n    // Can either be 2d or 3d transform\n    const matrixType = matrix.includes('3d') ? '3d' : '2d'\n    const matrixValues = matrix.match(/matrix.*\\((.+)\\)/)[1].split(', ')\n\n    // 2d matrices have 6 values\n    // Last 2 values are X and Y.\n    // 2d matrices does not have Z value.\n    if (matrixType === '2d') {\n        return {\n            x: matrixValues[4],\n            y: matrixValues[5],\n            z: 0\n        }\n    }\n\n    // 3d matrices have 16 values\n    // The 13th, 14th, and 15th values are X, Y, and Z\n    if (matrixType === '3d') {\n        return {\n            x: matrixValues[12],\n            y: matrixValues[13],\n            z: matrixValues[14]\n        }\n    }\n}\nexport function truncate( str, n, useWordBoundary ){\n    if (str.length <= n) { return str; }\n    const subString = str.substr(0, n-1); // the original check\n    return (useWordBoundary\n        ? subString.substr(0, subString.lastIndexOf(\" \"))\n        : subString) + \"&hellip;\";\n};\nexport function isNumber(n) { return !isNaN(parseFloat(n)) && !isNaN(n - 0) }\n","import React, {useContext, useEffect, useState} from \"react\";\nimport Page from \"../Page\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport './styles/styles.scss';\nimport {AppContext} from \"../../context/AppContext\";\nimport {gsap} from \"gsap\";\nimport {getIndexByKeyValue} from \"../../utils/utilities\";\nimport SwiperCore, {Navigation, Pagination, Scrollbar, A11y} from 'swiper';\nimport {Swiper, SwiperSlide} from 'swiper/react';\nimport 'swiper/swiper.scss';\nimport 'swiper/components/pagination/pagination.scss';\nimport RSC from \"react-scrollbars-custom\";\nimport Interweave from \"interweave\";\n\nconst Story = () => {\n    const {state} = useContext(AppContext);\n    const {id} = useParams();\n    const [story, setStory] = useState()\n    const [person, setPerson] = useState()\n    const [displaymedals, setDisplaymedals] = useState()\n\n    useEffect(() => {\n        if (state.featured) {\n           let idx = getIndexByKeyValue(state.featured, 'id', parseInt(id));\n           setStory(state.featured[idx]);\n           let storyID = state.featured[idx].id;\n           //console.log('story', state.featured[idx]);\n           state.names.forEach(name => {\n             if (name.featured_story.ID === storyID) {\n                 //console.log('this is ', name.firstname);\n                 setPerson(name);\n             }\n           })\n\n            let medals = state.featured[idx].medals;\n            //console.log('medals', medals);\n\n            //let idx = getIndexByKeyValue(state.featured, 'id', parseInt(id));\n           let tempMedals = [];\n           medals.forEach(medal => {\n               let idx = getIndexByKeyValue(state.medals, 'id', parseInt(medal.ID));\n\n               if ( state.medals[idx].images) {\n                   tempMedals.push( state.medals[idx].images)\n               }\n           })\n            setDisplaymedals(tempMedals)\n        }\n    }, [state.featured, id]);\n\n    const showMedals = ()=> {\n        gsap.set('.images__objects', {autoAlpha: 0})\n        gsap.set('.images__medal', {autoAlpha: 1})\n    }\n    const showObjects = ()=> {\n        gsap.set('.images__objects', {autoAlpha: 1})\n        gsap.set('.images__medal', {autoAlpha: 0})\n    }\n\n    return (\n        <Page class=\"story\">\n            {story ? (\n                <>\n                    <div className=\"story__left\">\n                        <h1>Featured stories</h1>\n                        <div className=\"featured_result__image\">\n\n                        </div>\n                    </div>\n                    <div className=\"story__mid\">\n                        {person && person.firstname ? (\n                            <h2>{person && person.firstname} {person && person.surname}</h2>\n                        ) : (<></>)}\n                        <RSC id=\"RSC-Example\" style={{width: \"700px\", height: \"80%\", inverted: false}}>\n                            <div className=\"story__copy\">\n                            <div className=\"relatedperson\">\n                                {person && person.rank ? (\n                                    <p><span className=\"bold\">Rank: </span>{person.rank}</p>\n                                ) : (<></>)}\n                                {person && person.date_of_death ? (\n                                    <p><span className=\"bold\">Date of death: </span>{person.date_of_death}</p>\n                                ) : (<></>)}\n                                {person && person.buried_memorialised ? (\n                                    <p><span className=\"bold\">Buried/memorialised: </span>{person.buried_memorialised}</p>\n                                ) : (<></>)}\n                                {person && person.next_of_kin ? (\n                                    <p><span className=\"bold\">Next of kin: </span>{person.next_of_kin}</p>\n                                ) : (<></>)}\n                            </div>\n\n                            {story && story.personal_info ? (\n                                <>\n                                <Interweave content={story.personal_info}></Interweave>\n                                    <br/>\n                                    <br/>\n                                    <br/>\n                                    <br/>\n                                    <br/>\n                                    <br/>\n                                    <br/>\n                                </>\n\n                            ) : (<></>)}\n                            </div>\n                        </RSC>\n\n                    </div>\n                    <div className=\"story__right\">\n                        <div className=\"image_select\">\n                            <div onClick={showMedals}>medals</div> | <div onClick={showObjects}>objects</div>\n                        </div>\n                        <div className=\"images\">\n                            <div className=\"images__medal\">\n                                {displaymedals && displaymedals.length ?\n                                    displaymedals.map((e, i) => (\n                                        <img key={i} src={e} />\n                                    ))\n                                : <></>\n\n                                }\n                            </div>\n                            <div className=\"images__objects\">\n                                <Swiper\n                                    spaceBetween={50}\n                                    slidesPerView={1}\n                                    navigation\n                                    pagination={{clickable: true}}\n                                >\n                                    {story.other_objects && story.other_objects.map((object, index) => (\n                                        <SwiperSlide key={index} >\n                                            <img src={object.sizes.medium} alt=\"\"/>\n                                        </SwiperSlide>\n                                    ))}\n                                </Swiper>\n                            </div>\n                        </div>\n                    </div>\n\n                </>\n\n                ) :\n                <></>\n            }\n\n        </Page>\n    )\n}\nexport default Story;\n","import React, {useEffect, useMemo, useReducer} from 'react';\nimport {DATA_FEATURED, DATA_LOADED, DATA_STORIES, DATA_NAMES, SET_DATA, DATA_MEDALS} from \"./reducers/types\";\nimport {AppContext} from \"./context/AppContext\";\nimport {Switch, Route} from \"react-router-dom\";\nimport {getAppData} from \"./utils/getAppData\";\nimport appReducer from \"./reducers/AppReducer\";\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport Header from \"./pages/Components/Header/Header\";\nimport Names from \"./pages/Names/Names\";\nimport Memorial from \"./pages/Memorial/Memorial\";\nimport FeaturedStories from \"./pages/FeaturedStories/FeaturedStories\";\nimport './App.scss';\nimport Story from \"./pages/Story/Story\";\n\nfunction App() {\n  const [state, dispatch] = useReducer(appReducer, {});\n  const providerValue = useMemo(() => ({state, dispatch}), [state, dispatch]);\n\n  useEffect(() => {\n    async function get() {\n      /**\n       * Get medal stories\n       */\n      let names = await getAppData(`pages/73&_embed&per_page=1000`);\n      dispatch({type: DATA_NAMES, data: names});\n      /**\n       * Get medals\n       */\n      let medals = await getAppData(`medal`);\n      console.log('', medals);\n      dispatch({type: DATA_MEDALS, data: medals});\n      /**\n       * Get featured stories\n       */\n      let featured_stories = await getAppData(`featured_story`);\n      dispatch({type: DATA_FEATURED, data: featured_stories});\n    }\n    get().then(()=> {\n      dispatch({type: DATA_LOADED});\n    })\n  }, []);\n\n  return (\n      <div className=\"layout\">\n        <Header/>\n        <AppContext.Provider value={providerValue}>\n          <Switch>\n            <Route path=\"/\" component={HomePage} exact />\n            <Route path=\"/app.html\" component={HomePage} exact />\n            <Route path=\"/names\" component={Names} exact />\n            <Route path=\"/featuredstories\" component={FeaturedStories} exact />\n            <Route path=\"/memorial\" component={Memorial} exact />\n            <Route path=\"/story/:id\" component={Story} />\n          </Switch>\n        </AppContext.Provider>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport {MemoryRouter, BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}